name: Deploy API to AWS EKS
on:
    push:
        branches: [master]
env:
    IMAGE_TAG: ${{ github.sha }}
    DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
    DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
    DOCKER_REPOSITORY: ${{ secrets.DOCKER_REPOSITORY }}
jobs:
    deploy-api:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v3
            
            - name: Confirmando início da execução
              run: echo "Testando novo deploy"

            # Fazer login no Docker e fazer push para o Docker Hub
            - name: Login no Docker
              uses: docker/login-action@v2
              with:
                username: ${{ secrets.DOCKER_USERNAME }}
                password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Build e tag do Docker e push para o Docker Hub
              run:  |
                docker build --pull --rm -f ./api/Dockerfile -t $DOCKER_USERNAME/$DOCKER_REPOSITORY:$IMAGE_TAG api
                docker push $DOCKER_USERNAME/$DOCKER_REPOSITORY:$IMAGE_TAG
            
            # Fazer login na AWS
            - name: Fazer login na AWS
              uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: ${{ secrets.AWS_REGION }}

            - name: Listando os clusters
              run: aws eks list-clusters

            # Configurar o context do cluster, por meio do kubeconfig
            - name: Atualizando arquivo kubeconfig
              run: aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.EKS_CLUSTER }}

            - name: Testando kubectl
              run: |
                kubectl config get-contexts
                kubectl get pods

            # Aplicar o arquivo deployment com a nova versão do Docker
            - name: Aplicando arquivo deployment com nova versão
              run: |
                export DOCKER_REGISTRY=$DOCKER_REGISTRY
                export DOCKER_REPOSITORY=$DOCKER_REPOSITORY
                export IMAGE_TAG=$IMAGE_TAG
                envsubst < ./api/k8s/deployment.yml | kubectl apply -f -